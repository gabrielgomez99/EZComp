Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    DIVIDE
    EQUALS
    LESSEQ
    LPAREN
    MINUS
    MOREEQ
    PLUS
    RPAREN
    THEN
    TIMES
    WHILE

Grammar

Rule 0     S' -> programa_start
Rule 1     programa_start -> PROGRAM ID ; programa_start_1 BLOQUE
Rule 2     programa_start_1 -> VARS
Rule 3     programa_start_1 -> empty
Rule 4     VARS -> VAR ID VARS_I : TIPO ; VARS_1
Rule 5     VARS_I -> ID VARS_I
Rule 6     VARS_I -> empty
Rule 7     VARS_1 -> ID VARS_I : TIPO ; VARS_1
Rule 8     VARS_1 -> empty
Rule 9     TIPO -> FLOAT
Rule 10    TIPO -> INT
Rule 11    BLOQUE -> { BLOQUE_1 }
Rule 12    BLOQUE_1 -> ESTATUTO BLOQUE_1
Rule 13    BLOQUE_1 -> empty
Rule 14    ESTATUTO -> ASIGNACION
Rule 15    ESTATUTO -> CONDICION
Rule 16    ESTATUTO -> ESCRITURA
Rule 17    ASIGNACION -> ID = EXPRESION
Rule 18    EXPRESION -> EXP EXPRESION_1
Rule 19    EXP -> TERMINO EXP_1
Rule 20    EXP_1 -> + EXP
Rule 21    EXP_1 -> - EXP
Rule 22    EXP_1 -> empty
Rule 23    EXPRESION_1 -> > EXPRESION
Rule 24    EXPRESION_1 -> < EXPRESION
Rule 25    EXPRESION_1 -> MORELESS EXPRESION
Rule 26    EXPRESION_1 -> empty
Rule 27    ESCRITURA -> PRINT ( ESCRITURA_1 ) ;
Rule 28    ESCRITURA_1 -> CTESTRING ESCRITURA_2
Rule 29    ESCRITURA_1 -> EXPRESION ESCRITURA_2
Rule 30    ESCRITURA_2 -> ESCRITURA_1
Rule 31    ESCRITURA_2 -> empty
Rule 32    CONDICION -> IF ( EXPRESION ) BLOQUE CONDICION_1 ;
Rule 33    CONDICION_1 -> ELSE BLOQUE
Rule 34    CONDICION_1 -> empty
Rule 35    TERMINO -> FACTOR TERMINO_1
Rule 36    TERMINO_1 -> * TERMINO
Rule 37    TERMINO_1 -> / TERMINO
Rule 38    TERMINO_1 -> empty
Rule 39    FACTOR -> ( EXPRESION ) FACTOR_1
Rule 40    FACTOR -> FACTOR_1 VAR_CTE
Rule 41    FACTOR_1 -> +
Rule 42    FACTOR_1 -> -
Rule 43    FACTOR_1 -> empty
Rule 44    VAR_CTE -> ID
Rule 45    VAR_CTE -> INT
Rule 46    VAR_CTE -> FLOAT
Rule 47    empty -> <empty>

Terminals, with rules where they appear

(                    : 27 32 39
)                    : 27 32 39
*                    : 36
+                    : 20 41
-                    : 21 42
/                    : 37
:                    : 4 7
;                    : 1 4 7 27 32
<                    : 24
=                    : 17
>                    : 23
COMMENT              : 
CTESTRING            : 28
DIVIDE               : 
ELSE                 : 33
EQUALS               : 
FLOAT                : 9 46
ID                   : 1 4 5 7 17 44
IF                   : 32
INT                  : 10 45
LESSEQ               : 
LPAREN               : 
MINUS                : 
MOREEQ               : 
MORELESS             : 25
PLUS                 : 
PRINT                : 27
PROGRAM              : 1
RPAREN               : 
THEN                 : 
TIMES                : 
VAR                  : 4
WHILE                : 
error                : 
{                    : 11
}                    : 11

Nonterminals, with rules where they appear

ASIGNACION           : 14
BLOQUE               : 1 32 33
BLOQUE_1             : 11 12
CONDICION            : 15
CONDICION_1          : 32
ESCRITURA            : 16
ESCRITURA_1          : 27 30
ESCRITURA_2          : 28 29
ESTATUTO             : 12
EXP                  : 18 20 21
EXPRESION            : 17 23 24 25 29 32 39
EXPRESION_1          : 18
EXP_1                : 19
FACTOR               : 35
FACTOR_1             : 39 40
TERMINO              : 19 36 37
TERMINO_1            : 35
TIPO                 : 4 7
VARS                 : 2
VARS_1               : 4 7
VARS_I               : 4 5 7
VAR_CTE              : 40
empty                : 3 6 8 13 22 26 31 34 38 43
programa_start       : 0
programa_start_1     : 1

Parsing method: LALR

state 0

    (0) S' -> . programa_start
    (1) programa_start -> . PROGRAM ID ; programa_start_1 BLOQUE

    PROGRAM         shift and go to state 2

    programa_start                 shift and go to state 1

state 1

    (0) S' -> programa_start .



state 2

    (1) programa_start -> PROGRAM . ID ; programa_start_1 BLOQUE

    ID              shift and go to state 3


state 3

    (1) programa_start -> PROGRAM ID . ; programa_start_1 BLOQUE

    ;               shift and go to state 4


state 4

    (1) programa_start -> PROGRAM ID ; . programa_start_1 BLOQUE
    (2) programa_start_1 -> . VARS
    (3) programa_start_1 -> . empty
    (4) VARS -> . VAR ID VARS_I : TIPO ; VARS_1
    (47) empty -> .

    VAR             shift and go to state 8
    {               reduce using rule 47 (empty -> .)

    programa_start_1               shift and go to state 5
    VARS                           shift and go to state 6
    empty                          shift and go to state 7

state 5

    (1) programa_start -> PROGRAM ID ; programa_start_1 . BLOQUE
    (11) BLOQUE -> . { BLOQUE_1 }

    {               shift and go to state 10

    BLOQUE                         shift and go to state 9

state 6

    (2) programa_start_1 -> VARS .

    {               reduce using rule 2 (programa_start_1 -> VARS .)


state 7

    (3) programa_start_1 -> empty .

    {               reduce using rule 3 (programa_start_1 -> empty .)


state 8

    (4) VARS -> VAR . ID VARS_I : TIPO ; VARS_1

    ID              shift and go to state 11


state 9

    (1) programa_start -> PROGRAM ID ; programa_start_1 BLOQUE .

    $end            reduce using rule 1 (programa_start -> PROGRAM ID ; programa_start_1 BLOQUE .)


state 10

    (11) BLOQUE -> { . BLOQUE_1 }
    (12) BLOQUE_1 -> . ESTATUTO BLOQUE_1
    (13) BLOQUE_1 -> . empty
    (14) ESTATUTO -> . ASIGNACION
    (15) ESTATUTO -> . CONDICION
    (16) ESTATUTO -> . ESCRITURA
    (47) empty -> .
    (17) ASIGNACION -> . ID = EXPRESION
    (32) CONDICION -> . IF ( EXPRESION ) BLOQUE CONDICION_1 ;
    (27) ESCRITURA -> . PRINT ( ESCRITURA_1 ) ;

    }               reduce using rule 47 (empty -> .)
    ID              shift and go to state 18
    IF              shift and go to state 19
    PRINT           shift and go to state 20

    BLOQUE_1                       shift and go to state 12
    ESTATUTO                       shift and go to state 13
    empty                          shift and go to state 14
    ASIGNACION                     shift and go to state 15
    CONDICION                      shift and go to state 16
    ESCRITURA                      shift and go to state 17

state 11

    (4) VARS -> VAR ID . VARS_I : TIPO ; VARS_1
    (5) VARS_I -> . ID VARS_I
    (6) VARS_I -> . empty
    (47) empty -> .

    ID              shift and go to state 21
    :               reduce using rule 47 (empty -> .)

    VARS_I                         shift and go to state 22
    empty                          shift and go to state 23

state 12

    (11) BLOQUE -> { BLOQUE_1 . }

    }               shift and go to state 24


state 13

    (12) BLOQUE_1 -> ESTATUTO . BLOQUE_1
    (12) BLOQUE_1 -> . ESTATUTO BLOQUE_1
    (13) BLOQUE_1 -> . empty
    (14) ESTATUTO -> . ASIGNACION
    (15) ESTATUTO -> . CONDICION
    (16) ESTATUTO -> . ESCRITURA
    (47) empty -> .
    (17) ASIGNACION -> . ID = EXPRESION
    (32) CONDICION -> . IF ( EXPRESION ) BLOQUE CONDICION_1 ;
    (27) ESCRITURA -> . PRINT ( ESCRITURA_1 ) ;

    }               reduce using rule 47 (empty -> .)
    ID              shift and go to state 18
    IF              shift and go to state 19
    PRINT           shift and go to state 20

    ESTATUTO                       shift and go to state 13
    BLOQUE_1                       shift and go to state 25
    empty                          shift and go to state 14
    ASIGNACION                     shift and go to state 15
    CONDICION                      shift and go to state 16
    ESCRITURA                      shift and go to state 17

state 14

    (13) BLOQUE_1 -> empty .

    }               reduce using rule 13 (BLOQUE_1 -> empty .)


state 15

    (14) ESTATUTO -> ASIGNACION .

    ID              reduce using rule 14 (ESTATUTO -> ASIGNACION .)
    IF              reduce using rule 14 (ESTATUTO -> ASIGNACION .)
    PRINT           reduce using rule 14 (ESTATUTO -> ASIGNACION .)
    }               reduce using rule 14 (ESTATUTO -> ASIGNACION .)


state 16

    (15) ESTATUTO -> CONDICION .

    ID              reduce using rule 15 (ESTATUTO -> CONDICION .)
    IF              reduce using rule 15 (ESTATUTO -> CONDICION .)
    PRINT           reduce using rule 15 (ESTATUTO -> CONDICION .)
    }               reduce using rule 15 (ESTATUTO -> CONDICION .)


state 17

    (16) ESTATUTO -> ESCRITURA .

    ID              reduce using rule 16 (ESTATUTO -> ESCRITURA .)
    IF              reduce using rule 16 (ESTATUTO -> ESCRITURA .)
    PRINT           reduce using rule 16 (ESTATUTO -> ESCRITURA .)
    }               reduce using rule 16 (ESTATUTO -> ESCRITURA .)


state 18

    (17) ASIGNACION -> ID . = EXPRESION

    =               shift and go to state 26


state 19

    (32) CONDICION -> IF . ( EXPRESION ) BLOQUE CONDICION_1 ;

    (               shift and go to state 27


state 20

    (27) ESCRITURA -> PRINT . ( ESCRITURA_1 ) ;

    (               shift and go to state 28


state 21

    (5) VARS_I -> ID . VARS_I
    (5) VARS_I -> . ID VARS_I
    (6) VARS_I -> . empty
    (47) empty -> .

    ID              shift and go to state 21
    :               reduce using rule 47 (empty -> .)

    VARS_I                         shift and go to state 29
    empty                          shift and go to state 23

state 22

    (4) VARS -> VAR ID VARS_I . : TIPO ; VARS_1

    :               shift and go to state 30


state 23

    (6) VARS_I -> empty .

    :               reduce using rule 6 (VARS_I -> empty .)


state 24

    (11) BLOQUE -> { BLOQUE_1 } .

    $end            reduce using rule 11 (BLOQUE -> { BLOQUE_1 } .)
    ELSE            reduce using rule 11 (BLOQUE -> { BLOQUE_1 } .)
    ;               reduce using rule 11 (BLOQUE -> { BLOQUE_1 } .)


state 25

    (12) BLOQUE_1 -> ESTATUTO BLOQUE_1 .

    }               reduce using rule 12 (BLOQUE_1 -> ESTATUTO BLOQUE_1 .)


state 26

    (17) ASIGNACION -> ID = . EXPRESION
    (18) EXPRESION -> . EXP EXPRESION_1
    (19) EXP -> . TERMINO EXP_1
    (35) TERMINO -> . FACTOR TERMINO_1
    (39) FACTOR -> . ( EXPRESION ) FACTOR_1
    (40) FACTOR -> . FACTOR_1 VAR_CTE
    (41) FACTOR_1 -> . +
    (42) FACTOR_1 -> . -
    (43) FACTOR_1 -> . empty
    (47) empty -> .

    (               shift and go to state 35
    +               shift and go to state 37
    -               shift and go to state 38
    ID              reduce using rule 47 (empty -> .)
    INT             reduce using rule 47 (empty -> .)
    FLOAT           reduce using rule 47 (empty -> .)

    EXPRESION                      shift and go to state 31
    EXP                            shift and go to state 32
    TERMINO                        shift and go to state 33
    FACTOR                         shift and go to state 34
    FACTOR_1                       shift and go to state 36
    empty                          shift and go to state 39

state 27

    (32) CONDICION -> IF ( . EXPRESION ) BLOQUE CONDICION_1 ;
    (18) EXPRESION -> . EXP EXPRESION_1
    (19) EXP -> . TERMINO EXP_1
    (35) TERMINO -> . FACTOR TERMINO_1
    (39) FACTOR -> . ( EXPRESION ) FACTOR_1
    (40) FACTOR -> . FACTOR_1 VAR_CTE
    (41) FACTOR_1 -> . +
    (42) FACTOR_1 -> . -
    (43) FACTOR_1 -> . empty
    (47) empty -> .

    (               shift and go to state 35
    +               shift and go to state 37
    -               shift and go to state 38
    ID              reduce using rule 47 (empty -> .)
    INT             reduce using rule 47 (empty -> .)
    FLOAT           reduce using rule 47 (empty -> .)

    EXPRESION                      shift and go to state 40
    EXP                            shift and go to state 32
    TERMINO                        shift and go to state 33
    FACTOR                         shift and go to state 34
    FACTOR_1                       shift and go to state 36
    empty                          shift and go to state 39

state 28

    (27) ESCRITURA -> PRINT ( . ESCRITURA_1 ) ;
    (28) ESCRITURA_1 -> . CTESTRING ESCRITURA_2
    (29) ESCRITURA_1 -> . EXPRESION ESCRITURA_2
    (18) EXPRESION -> . EXP EXPRESION_1
    (19) EXP -> . TERMINO EXP_1
    (35) TERMINO -> . FACTOR TERMINO_1
    (39) FACTOR -> . ( EXPRESION ) FACTOR_1
    (40) FACTOR -> . FACTOR_1 VAR_CTE
    (41) FACTOR_1 -> . +
    (42) FACTOR_1 -> . -
    (43) FACTOR_1 -> . empty
    (47) empty -> .

    CTESTRING       shift and go to state 42
    (               shift and go to state 35
    +               shift and go to state 37
    -               shift and go to state 38
    ID              reduce using rule 47 (empty -> .)
    INT             reduce using rule 47 (empty -> .)
    FLOAT           reduce using rule 47 (empty -> .)

    ESCRITURA_1                    shift and go to state 41
    EXPRESION                      shift and go to state 43
    EXP                            shift and go to state 32
    TERMINO                        shift and go to state 33
    FACTOR                         shift and go to state 34
    FACTOR_1                       shift and go to state 36
    empty                          shift and go to state 39

state 29

    (5) VARS_I -> ID VARS_I .

    :               reduce using rule 5 (VARS_I -> ID VARS_I .)


state 30

    (4) VARS -> VAR ID VARS_I : . TIPO ; VARS_1
    (9) TIPO -> . FLOAT
    (10) TIPO -> . INT

    FLOAT           shift and go to state 45
    INT             shift and go to state 46

    TIPO                           shift and go to state 44

state 31

    (17) ASIGNACION -> ID = EXPRESION .

    ID              reduce using rule 17 (ASIGNACION -> ID = EXPRESION .)
    IF              reduce using rule 17 (ASIGNACION -> ID = EXPRESION .)
    PRINT           reduce using rule 17 (ASIGNACION -> ID = EXPRESION .)
    }               reduce using rule 17 (ASIGNACION -> ID = EXPRESION .)


state 32

    (18) EXPRESION -> EXP . EXPRESION_1
    (23) EXPRESION_1 -> . > EXPRESION
    (24) EXPRESION_1 -> . < EXPRESION
    (25) EXPRESION_1 -> . MORELESS EXPRESION
    (26) EXPRESION_1 -> . empty
    (47) empty -> .

    >               shift and go to state 48
    <               shift and go to state 49
    MORELESS        shift and go to state 50
    ID              reduce using rule 47 (empty -> .)
    IF              reduce using rule 47 (empty -> .)
    PRINT           reduce using rule 47 (empty -> .)
    }               reduce using rule 47 (empty -> .)
    )               reduce using rule 47 (empty -> .)
    CTESTRING       reduce using rule 47 (empty -> .)
    (               reduce using rule 47 (empty -> .)
    +               reduce using rule 47 (empty -> .)
    -               reduce using rule 47 (empty -> .)
    INT             reduce using rule 47 (empty -> .)
    FLOAT           reduce using rule 47 (empty -> .)

    EXPRESION_1                    shift and go to state 47
    empty                          shift and go to state 51

state 33

    (19) EXP -> TERMINO . EXP_1
    (20) EXP_1 -> . + EXP
    (21) EXP_1 -> . - EXP
    (22) EXP_1 -> . empty
    (47) empty -> .

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    +               shift and go to state 53
    -               shift and go to state 54
    >               reduce using rule 47 (empty -> .)
    <               reduce using rule 47 (empty -> .)
    MORELESS        reduce using rule 47 (empty -> .)
    ID              reduce using rule 47 (empty -> .)
    IF              reduce using rule 47 (empty -> .)
    PRINT           reduce using rule 47 (empty -> .)
    }               reduce using rule 47 (empty -> .)
    )               reduce using rule 47 (empty -> .)
    CTESTRING       reduce using rule 47 (empty -> .)
    (               reduce using rule 47 (empty -> .)
    INT             reduce using rule 47 (empty -> .)
    FLOAT           reduce using rule 47 (empty -> .)

  ! +               [ reduce using rule 47 (empty -> .) ]
  ! -               [ reduce using rule 47 (empty -> .) ]

    EXP_1                          shift and go to state 52
    empty                          shift and go to state 55

state 34

    (35) TERMINO -> FACTOR . TERMINO_1
    (36) TERMINO_1 -> . * TERMINO
    (37) TERMINO_1 -> . / TERMINO
    (38) TERMINO_1 -> . empty
    (47) empty -> .

    *               shift and go to state 57
    /               shift and go to state 58
    +               reduce using rule 47 (empty -> .)
    -               reduce using rule 47 (empty -> .)
    >               reduce using rule 47 (empty -> .)
    <               reduce using rule 47 (empty -> .)
    MORELESS        reduce using rule 47 (empty -> .)
    ID              reduce using rule 47 (empty -> .)
    IF              reduce using rule 47 (empty -> .)
    PRINT           reduce using rule 47 (empty -> .)
    }               reduce using rule 47 (empty -> .)
    )               reduce using rule 47 (empty -> .)
    CTESTRING       reduce using rule 47 (empty -> .)
    (               reduce using rule 47 (empty -> .)
    INT             reduce using rule 47 (empty -> .)
    FLOAT           reduce using rule 47 (empty -> .)

    TERMINO_1                      shift and go to state 56
    empty                          shift and go to state 59

state 35

    (39) FACTOR -> ( . EXPRESION ) FACTOR_1
    (18) EXPRESION -> . EXP EXPRESION_1
    (19) EXP -> . TERMINO EXP_1
    (35) TERMINO -> . FACTOR TERMINO_1
    (39) FACTOR -> . ( EXPRESION ) FACTOR_1
    (40) FACTOR -> . FACTOR_1 VAR_CTE
    (41) FACTOR_1 -> . +
    (42) FACTOR_1 -> . -
    (43) FACTOR_1 -> . empty
    (47) empty -> .

    (               shift and go to state 35
    +               shift and go to state 37
    -               shift and go to state 38
    ID              reduce using rule 47 (empty -> .)
    INT             reduce using rule 47 (empty -> .)
    FLOAT           reduce using rule 47 (empty -> .)

    EXPRESION                      shift and go to state 60
    FACTOR_1                       shift and go to state 36
    EXP                            shift and go to state 32
    TERMINO                        shift and go to state 33
    FACTOR                         shift and go to state 34
    empty                          shift and go to state 39

state 36

    (40) FACTOR -> FACTOR_1 . VAR_CTE
    (44) VAR_CTE -> . ID
    (45) VAR_CTE -> . INT
    (46) VAR_CTE -> . FLOAT

    ID              shift and go to state 62
    INT             shift and go to state 63
    FLOAT           shift and go to state 64

    VAR_CTE                        shift and go to state 61

state 37

    (41) FACTOR_1 -> + .

    ID              reduce using rule 41 (FACTOR_1 -> + .)
    INT             reduce using rule 41 (FACTOR_1 -> + .)
    FLOAT           reduce using rule 41 (FACTOR_1 -> + .)
    *               reduce using rule 41 (FACTOR_1 -> + .)
    /               reduce using rule 41 (FACTOR_1 -> + .)
    +               reduce using rule 41 (FACTOR_1 -> + .)
    -               reduce using rule 41 (FACTOR_1 -> + .)
    >               reduce using rule 41 (FACTOR_1 -> + .)
    <               reduce using rule 41 (FACTOR_1 -> + .)
    MORELESS        reduce using rule 41 (FACTOR_1 -> + .)
    IF              reduce using rule 41 (FACTOR_1 -> + .)
    PRINT           reduce using rule 41 (FACTOR_1 -> + .)
    }               reduce using rule 41 (FACTOR_1 -> + .)
    )               reduce using rule 41 (FACTOR_1 -> + .)
    CTESTRING       reduce using rule 41 (FACTOR_1 -> + .)
    (               reduce using rule 41 (FACTOR_1 -> + .)


state 38

    (42) FACTOR_1 -> - .

    ID              reduce using rule 42 (FACTOR_1 -> - .)
    INT             reduce using rule 42 (FACTOR_1 -> - .)
    FLOAT           reduce using rule 42 (FACTOR_1 -> - .)
    *               reduce using rule 42 (FACTOR_1 -> - .)
    /               reduce using rule 42 (FACTOR_1 -> - .)
    +               reduce using rule 42 (FACTOR_1 -> - .)
    -               reduce using rule 42 (FACTOR_1 -> - .)
    >               reduce using rule 42 (FACTOR_1 -> - .)
    <               reduce using rule 42 (FACTOR_1 -> - .)
    MORELESS        reduce using rule 42 (FACTOR_1 -> - .)
    IF              reduce using rule 42 (FACTOR_1 -> - .)
    PRINT           reduce using rule 42 (FACTOR_1 -> - .)
    }               reduce using rule 42 (FACTOR_1 -> - .)
    )               reduce using rule 42 (FACTOR_1 -> - .)
    CTESTRING       reduce using rule 42 (FACTOR_1 -> - .)
    (               reduce using rule 42 (FACTOR_1 -> - .)


state 39

    (43) FACTOR_1 -> empty .

    ID              reduce using rule 43 (FACTOR_1 -> empty .)
    INT             reduce using rule 43 (FACTOR_1 -> empty .)
    FLOAT           reduce using rule 43 (FACTOR_1 -> empty .)
    *               reduce using rule 43 (FACTOR_1 -> empty .)
    /               reduce using rule 43 (FACTOR_1 -> empty .)
    +               reduce using rule 43 (FACTOR_1 -> empty .)
    -               reduce using rule 43 (FACTOR_1 -> empty .)
    >               reduce using rule 43 (FACTOR_1 -> empty .)
    <               reduce using rule 43 (FACTOR_1 -> empty .)
    MORELESS        reduce using rule 43 (FACTOR_1 -> empty .)
    IF              reduce using rule 43 (FACTOR_1 -> empty .)
    PRINT           reduce using rule 43 (FACTOR_1 -> empty .)
    }               reduce using rule 43 (FACTOR_1 -> empty .)
    )               reduce using rule 43 (FACTOR_1 -> empty .)
    CTESTRING       reduce using rule 43 (FACTOR_1 -> empty .)
    (               reduce using rule 43 (FACTOR_1 -> empty .)


state 40

    (32) CONDICION -> IF ( EXPRESION . ) BLOQUE CONDICION_1 ;

    )               shift and go to state 65


state 41

    (27) ESCRITURA -> PRINT ( ESCRITURA_1 . ) ;

    )               shift and go to state 66


state 42

    (28) ESCRITURA_1 -> CTESTRING . ESCRITURA_2
    (30) ESCRITURA_2 -> . ESCRITURA_1
    (31) ESCRITURA_2 -> . empty
    (28) ESCRITURA_1 -> . CTESTRING ESCRITURA_2
    (29) ESCRITURA_1 -> . EXPRESION ESCRITURA_2
    (47) empty -> .
    (18) EXPRESION -> . EXP EXPRESION_1
    (19) EXP -> . TERMINO EXP_1
    (35) TERMINO -> . FACTOR TERMINO_1
    (39) FACTOR -> . ( EXPRESION ) FACTOR_1
    (40) FACTOR -> . FACTOR_1 VAR_CTE
    (41) FACTOR_1 -> . +
    (42) FACTOR_1 -> . -
    (43) FACTOR_1 -> . empty

    CTESTRING       shift and go to state 42
    )               reduce using rule 47 (empty -> .)
    ID              reduce using rule 47 (empty -> .)
    INT             reduce using rule 47 (empty -> .)
    FLOAT           reduce using rule 47 (empty -> .)
    (               shift and go to state 35
    +               shift and go to state 37
    -               shift and go to state 38

    ESCRITURA_2                    shift and go to state 67
    ESCRITURA_1                    shift and go to state 68
    empty                          shift and go to state 69
    EXPRESION                      shift and go to state 43
    EXP                            shift and go to state 32
    TERMINO                        shift and go to state 33
    FACTOR                         shift and go to state 34
    FACTOR_1                       shift and go to state 36

state 43

    (29) ESCRITURA_1 -> EXPRESION . ESCRITURA_2
    (30) ESCRITURA_2 -> . ESCRITURA_1
    (31) ESCRITURA_2 -> . empty
    (28) ESCRITURA_1 -> . CTESTRING ESCRITURA_2
    (29) ESCRITURA_1 -> . EXPRESION ESCRITURA_2
    (47) empty -> .
    (18) EXPRESION -> . EXP EXPRESION_1
    (19) EXP -> . TERMINO EXP_1
    (35) TERMINO -> . FACTOR TERMINO_1
    (39) FACTOR -> . ( EXPRESION ) FACTOR_1
    (40) FACTOR -> . FACTOR_1 VAR_CTE
    (41) FACTOR_1 -> . +
    (42) FACTOR_1 -> . -
    (43) FACTOR_1 -> . empty

    CTESTRING       shift and go to state 42
    )               reduce using rule 47 (empty -> .)
    ID              reduce using rule 47 (empty -> .)
    INT             reduce using rule 47 (empty -> .)
    FLOAT           reduce using rule 47 (empty -> .)
    (               shift and go to state 35
    +               shift and go to state 37
    -               shift and go to state 38

    EXPRESION                      shift and go to state 43
    ESCRITURA_2                    shift and go to state 70
    ESCRITURA_1                    shift and go to state 68
    empty                          shift and go to state 69
    EXP                            shift and go to state 32
    TERMINO                        shift and go to state 33
    FACTOR                         shift and go to state 34
    FACTOR_1                       shift and go to state 36

state 44

    (4) VARS -> VAR ID VARS_I : TIPO . ; VARS_1

    ;               shift and go to state 71


state 45

    (9) TIPO -> FLOAT .

    ;               reduce using rule 9 (TIPO -> FLOAT .)


state 46

    (10) TIPO -> INT .

    ;               reduce using rule 10 (TIPO -> INT .)


state 47

    (18) EXPRESION -> EXP EXPRESION_1 .

    ID              reduce using rule 18 (EXPRESION -> EXP EXPRESION_1 .)
    IF              reduce using rule 18 (EXPRESION -> EXP EXPRESION_1 .)
    PRINT           reduce using rule 18 (EXPRESION -> EXP EXPRESION_1 .)
    }               reduce using rule 18 (EXPRESION -> EXP EXPRESION_1 .)
    )               reduce using rule 18 (EXPRESION -> EXP EXPRESION_1 .)
    CTESTRING       reduce using rule 18 (EXPRESION -> EXP EXPRESION_1 .)
    (               reduce using rule 18 (EXPRESION -> EXP EXPRESION_1 .)
    +               reduce using rule 18 (EXPRESION -> EXP EXPRESION_1 .)
    -               reduce using rule 18 (EXPRESION -> EXP EXPRESION_1 .)
    INT             reduce using rule 18 (EXPRESION -> EXP EXPRESION_1 .)
    FLOAT           reduce using rule 18 (EXPRESION -> EXP EXPRESION_1 .)


state 48

    (23) EXPRESION_1 -> > . EXPRESION
    (18) EXPRESION -> . EXP EXPRESION_1
    (19) EXP -> . TERMINO EXP_1
    (35) TERMINO -> . FACTOR TERMINO_1
    (39) FACTOR -> . ( EXPRESION ) FACTOR_1
    (40) FACTOR -> . FACTOR_1 VAR_CTE
    (41) FACTOR_1 -> . +
    (42) FACTOR_1 -> . -
    (43) FACTOR_1 -> . empty
    (47) empty -> .

    (               shift and go to state 35
    +               shift and go to state 37
    -               shift and go to state 38
    ID              reduce using rule 47 (empty -> .)
    INT             reduce using rule 47 (empty -> .)
    FLOAT           reduce using rule 47 (empty -> .)

    EXPRESION                      shift and go to state 72
    EXP                            shift and go to state 32
    TERMINO                        shift and go to state 33
    FACTOR                         shift and go to state 34
    FACTOR_1                       shift and go to state 36
    empty                          shift and go to state 39

state 49

    (24) EXPRESION_1 -> < . EXPRESION
    (18) EXPRESION -> . EXP EXPRESION_1
    (19) EXP -> . TERMINO EXP_1
    (35) TERMINO -> . FACTOR TERMINO_1
    (39) FACTOR -> . ( EXPRESION ) FACTOR_1
    (40) FACTOR -> . FACTOR_1 VAR_CTE
    (41) FACTOR_1 -> . +
    (42) FACTOR_1 -> . -
    (43) FACTOR_1 -> . empty
    (47) empty -> .

    (               shift and go to state 35
    +               shift and go to state 37
    -               shift and go to state 38
    ID              reduce using rule 47 (empty -> .)
    INT             reduce using rule 47 (empty -> .)
    FLOAT           reduce using rule 47 (empty -> .)

    EXPRESION                      shift and go to state 73
    EXP                            shift and go to state 32
    TERMINO                        shift and go to state 33
    FACTOR                         shift and go to state 34
    FACTOR_1                       shift and go to state 36
    empty                          shift and go to state 39

state 50

    (25) EXPRESION_1 -> MORELESS . EXPRESION
    (18) EXPRESION -> . EXP EXPRESION_1
    (19) EXP -> . TERMINO EXP_1
    (35) TERMINO -> . FACTOR TERMINO_1
    (39) FACTOR -> . ( EXPRESION ) FACTOR_1
    (40) FACTOR -> . FACTOR_1 VAR_CTE
    (41) FACTOR_1 -> . +
    (42) FACTOR_1 -> . -
    (43) FACTOR_1 -> . empty
    (47) empty -> .

    (               shift and go to state 35
    +               shift and go to state 37
    -               shift and go to state 38
    ID              reduce using rule 47 (empty -> .)
    INT             reduce using rule 47 (empty -> .)
    FLOAT           reduce using rule 47 (empty -> .)

    EXPRESION                      shift and go to state 74
    EXP                            shift and go to state 32
    TERMINO                        shift and go to state 33
    FACTOR                         shift and go to state 34
    FACTOR_1                       shift and go to state 36
    empty                          shift and go to state 39

state 51

    (26) EXPRESION_1 -> empty .

    ID              reduce using rule 26 (EXPRESION_1 -> empty .)
    IF              reduce using rule 26 (EXPRESION_1 -> empty .)
    PRINT           reduce using rule 26 (EXPRESION_1 -> empty .)
    }               reduce using rule 26 (EXPRESION_1 -> empty .)
    )               reduce using rule 26 (EXPRESION_1 -> empty .)
    CTESTRING       reduce using rule 26 (EXPRESION_1 -> empty .)
    (               reduce using rule 26 (EXPRESION_1 -> empty .)
    +               reduce using rule 26 (EXPRESION_1 -> empty .)
    -               reduce using rule 26 (EXPRESION_1 -> empty .)
    INT             reduce using rule 26 (EXPRESION_1 -> empty .)
    FLOAT           reduce using rule 26 (EXPRESION_1 -> empty .)


state 52

    (19) EXP -> TERMINO EXP_1 .

    >               reduce using rule 19 (EXP -> TERMINO EXP_1 .)
    <               reduce using rule 19 (EXP -> TERMINO EXP_1 .)
    MORELESS        reduce using rule 19 (EXP -> TERMINO EXP_1 .)
    ID              reduce using rule 19 (EXP -> TERMINO EXP_1 .)
    IF              reduce using rule 19 (EXP -> TERMINO EXP_1 .)
    PRINT           reduce using rule 19 (EXP -> TERMINO EXP_1 .)
    }               reduce using rule 19 (EXP -> TERMINO EXP_1 .)
    )               reduce using rule 19 (EXP -> TERMINO EXP_1 .)
    CTESTRING       reduce using rule 19 (EXP -> TERMINO EXP_1 .)
    (               reduce using rule 19 (EXP -> TERMINO EXP_1 .)
    +               reduce using rule 19 (EXP -> TERMINO EXP_1 .)
    -               reduce using rule 19 (EXP -> TERMINO EXP_1 .)
    INT             reduce using rule 19 (EXP -> TERMINO EXP_1 .)
    FLOAT           reduce using rule 19 (EXP -> TERMINO EXP_1 .)


state 53

    (20) EXP_1 -> + . EXP
    (19) EXP -> . TERMINO EXP_1
    (35) TERMINO -> . FACTOR TERMINO_1
    (39) FACTOR -> . ( EXPRESION ) FACTOR_1
    (40) FACTOR -> . FACTOR_1 VAR_CTE
    (41) FACTOR_1 -> . +
    (42) FACTOR_1 -> . -
    (43) FACTOR_1 -> . empty
    (47) empty -> .

    (               shift and go to state 35
    +               shift and go to state 37
    -               shift and go to state 38
    ID              reduce using rule 47 (empty -> .)
    INT             reduce using rule 47 (empty -> .)
    FLOAT           reduce using rule 47 (empty -> .)

    EXP                            shift and go to state 75
    TERMINO                        shift and go to state 33
    FACTOR                         shift and go to state 34
    FACTOR_1                       shift and go to state 36
    empty                          shift and go to state 39

state 54

    (21) EXP_1 -> - . EXP
    (19) EXP -> . TERMINO EXP_1
    (35) TERMINO -> . FACTOR TERMINO_1
    (39) FACTOR -> . ( EXPRESION ) FACTOR_1
    (40) FACTOR -> . FACTOR_1 VAR_CTE
    (41) FACTOR_1 -> . +
    (42) FACTOR_1 -> . -
    (43) FACTOR_1 -> . empty
    (47) empty -> .

    (               shift and go to state 35
    +               shift and go to state 37
    -               shift and go to state 38
    ID              reduce using rule 47 (empty -> .)
    INT             reduce using rule 47 (empty -> .)
    FLOAT           reduce using rule 47 (empty -> .)

    EXP                            shift and go to state 76
    TERMINO                        shift and go to state 33
    FACTOR                         shift and go to state 34
    FACTOR_1                       shift and go to state 36
    empty                          shift and go to state 39

state 55

    (22) EXP_1 -> empty .

    >               reduce using rule 22 (EXP_1 -> empty .)
    <               reduce using rule 22 (EXP_1 -> empty .)
    MORELESS        reduce using rule 22 (EXP_1 -> empty .)
    ID              reduce using rule 22 (EXP_1 -> empty .)
    IF              reduce using rule 22 (EXP_1 -> empty .)
    PRINT           reduce using rule 22 (EXP_1 -> empty .)
    }               reduce using rule 22 (EXP_1 -> empty .)
    )               reduce using rule 22 (EXP_1 -> empty .)
    CTESTRING       reduce using rule 22 (EXP_1 -> empty .)
    (               reduce using rule 22 (EXP_1 -> empty .)
    +               reduce using rule 22 (EXP_1 -> empty .)
    -               reduce using rule 22 (EXP_1 -> empty .)
    INT             reduce using rule 22 (EXP_1 -> empty .)
    FLOAT           reduce using rule 22 (EXP_1 -> empty .)


state 56

    (35) TERMINO -> FACTOR TERMINO_1 .

    +               reduce using rule 35 (TERMINO -> FACTOR TERMINO_1 .)
    -               reduce using rule 35 (TERMINO -> FACTOR TERMINO_1 .)
    >               reduce using rule 35 (TERMINO -> FACTOR TERMINO_1 .)
    <               reduce using rule 35 (TERMINO -> FACTOR TERMINO_1 .)
    MORELESS        reduce using rule 35 (TERMINO -> FACTOR TERMINO_1 .)
    ID              reduce using rule 35 (TERMINO -> FACTOR TERMINO_1 .)
    IF              reduce using rule 35 (TERMINO -> FACTOR TERMINO_1 .)
    PRINT           reduce using rule 35 (TERMINO -> FACTOR TERMINO_1 .)
    }               reduce using rule 35 (TERMINO -> FACTOR TERMINO_1 .)
    )               reduce using rule 35 (TERMINO -> FACTOR TERMINO_1 .)
    CTESTRING       reduce using rule 35 (TERMINO -> FACTOR TERMINO_1 .)
    (               reduce using rule 35 (TERMINO -> FACTOR TERMINO_1 .)
    INT             reduce using rule 35 (TERMINO -> FACTOR TERMINO_1 .)
    FLOAT           reduce using rule 35 (TERMINO -> FACTOR TERMINO_1 .)


state 57

    (36) TERMINO_1 -> * . TERMINO
    (35) TERMINO -> . FACTOR TERMINO_1
    (39) FACTOR -> . ( EXPRESION ) FACTOR_1
    (40) FACTOR -> . FACTOR_1 VAR_CTE
    (41) FACTOR_1 -> . +
    (42) FACTOR_1 -> . -
    (43) FACTOR_1 -> . empty
    (47) empty -> .

    (               shift and go to state 35
    +               shift and go to state 37
    -               shift and go to state 38
    ID              reduce using rule 47 (empty -> .)
    INT             reduce using rule 47 (empty -> .)
    FLOAT           reduce using rule 47 (empty -> .)

    TERMINO                        shift and go to state 77
    FACTOR                         shift and go to state 34
    FACTOR_1                       shift and go to state 36
    empty                          shift and go to state 39

state 58

    (37) TERMINO_1 -> / . TERMINO
    (35) TERMINO -> . FACTOR TERMINO_1
    (39) FACTOR -> . ( EXPRESION ) FACTOR_1
    (40) FACTOR -> . FACTOR_1 VAR_CTE
    (41) FACTOR_1 -> . +
    (42) FACTOR_1 -> . -
    (43) FACTOR_1 -> . empty
    (47) empty -> .

    (               shift and go to state 35
    +               shift and go to state 37
    -               shift and go to state 38
    ID              reduce using rule 47 (empty -> .)
    INT             reduce using rule 47 (empty -> .)
    FLOAT           reduce using rule 47 (empty -> .)

    TERMINO                        shift and go to state 78
    FACTOR                         shift and go to state 34
    FACTOR_1                       shift and go to state 36
    empty                          shift and go to state 39

state 59

    (38) TERMINO_1 -> empty .

    +               reduce using rule 38 (TERMINO_1 -> empty .)
    -               reduce using rule 38 (TERMINO_1 -> empty .)
    >               reduce using rule 38 (TERMINO_1 -> empty .)
    <               reduce using rule 38 (TERMINO_1 -> empty .)
    MORELESS        reduce using rule 38 (TERMINO_1 -> empty .)
    ID              reduce using rule 38 (TERMINO_1 -> empty .)
    IF              reduce using rule 38 (TERMINO_1 -> empty .)
    PRINT           reduce using rule 38 (TERMINO_1 -> empty .)
    }               reduce using rule 38 (TERMINO_1 -> empty .)
    )               reduce using rule 38 (TERMINO_1 -> empty .)
    CTESTRING       reduce using rule 38 (TERMINO_1 -> empty .)
    (               reduce using rule 38 (TERMINO_1 -> empty .)
    INT             reduce using rule 38 (TERMINO_1 -> empty .)
    FLOAT           reduce using rule 38 (TERMINO_1 -> empty .)


state 60

    (39) FACTOR -> ( EXPRESION . ) FACTOR_1

    )               shift and go to state 79


state 61

    (40) FACTOR -> FACTOR_1 VAR_CTE .

    *               reduce using rule 40 (FACTOR -> FACTOR_1 VAR_CTE .)
    /               reduce using rule 40 (FACTOR -> FACTOR_1 VAR_CTE .)
    +               reduce using rule 40 (FACTOR -> FACTOR_1 VAR_CTE .)
    -               reduce using rule 40 (FACTOR -> FACTOR_1 VAR_CTE .)
    >               reduce using rule 40 (FACTOR -> FACTOR_1 VAR_CTE .)
    <               reduce using rule 40 (FACTOR -> FACTOR_1 VAR_CTE .)
    MORELESS        reduce using rule 40 (FACTOR -> FACTOR_1 VAR_CTE .)
    ID              reduce using rule 40 (FACTOR -> FACTOR_1 VAR_CTE .)
    IF              reduce using rule 40 (FACTOR -> FACTOR_1 VAR_CTE .)
    PRINT           reduce using rule 40 (FACTOR -> FACTOR_1 VAR_CTE .)
    }               reduce using rule 40 (FACTOR -> FACTOR_1 VAR_CTE .)
    )               reduce using rule 40 (FACTOR -> FACTOR_1 VAR_CTE .)
    CTESTRING       reduce using rule 40 (FACTOR -> FACTOR_1 VAR_CTE .)
    (               reduce using rule 40 (FACTOR -> FACTOR_1 VAR_CTE .)
    INT             reduce using rule 40 (FACTOR -> FACTOR_1 VAR_CTE .)
    FLOAT           reduce using rule 40 (FACTOR -> FACTOR_1 VAR_CTE .)


state 62

    (44) VAR_CTE -> ID .

    *               reduce using rule 44 (VAR_CTE -> ID .)
    /               reduce using rule 44 (VAR_CTE -> ID .)
    +               reduce using rule 44 (VAR_CTE -> ID .)
    -               reduce using rule 44 (VAR_CTE -> ID .)
    >               reduce using rule 44 (VAR_CTE -> ID .)
    <               reduce using rule 44 (VAR_CTE -> ID .)
    MORELESS        reduce using rule 44 (VAR_CTE -> ID .)
    ID              reduce using rule 44 (VAR_CTE -> ID .)
    IF              reduce using rule 44 (VAR_CTE -> ID .)
    PRINT           reduce using rule 44 (VAR_CTE -> ID .)
    }               reduce using rule 44 (VAR_CTE -> ID .)
    )               reduce using rule 44 (VAR_CTE -> ID .)
    CTESTRING       reduce using rule 44 (VAR_CTE -> ID .)
    (               reduce using rule 44 (VAR_CTE -> ID .)
    INT             reduce using rule 44 (VAR_CTE -> ID .)
    FLOAT           reduce using rule 44 (VAR_CTE -> ID .)


state 63

    (45) VAR_CTE -> INT .

    *               reduce using rule 45 (VAR_CTE -> INT .)
    /               reduce using rule 45 (VAR_CTE -> INT .)
    +               reduce using rule 45 (VAR_CTE -> INT .)
    -               reduce using rule 45 (VAR_CTE -> INT .)
    >               reduce using rule 45 (VAR_CTE -> INT .)
    <               reduce using rule 45 (VAR_CTE -> INT .)
    MORELESS        reduce using rule 45 (VAR_CTE -> INT .)
    ID              reduce using rule 45 (VAR_CTE -> INT .)
    IF              reduce using rule 45 (VAR_CTE -> INT .)
    PRINT           reduce using rule 45 (VAR_CTE -> INT .)
    }               reduce using rule 45 (VAR_CTE -> INT .)
    )               reduce using rule 45 (VAR_CTE -> INT .)
    CTESTRING       reduce using rule 45 (VAR_CTE -> INT .)
    (               reduce using rule 45 (VAR_CTE -> INT .)
    INT             reduce using rule 45 (VAR_CTE -> INT .)
    FLOAT           reduce using rule 45 (VAR_CTE -> INT .)


state 64

    (46) VAR_CTE -> FLOAT .

    *               reduce using rule 46 (VAR_CTE -> FLOAT .)
    /               reduce using rule 46 (VAR_CTE -> FLOAT .)
    +               reduce using rule 46 (VAR_CTE -> FLOAT .)
    -               reduce using rule 46 (VAR_CTE -> FLOAT .)
    >               reduce using rule 46 (VAR_CTE -> FLOAT .)
    <               reduce using rule 46 (VAR_CTE -> FLOAT .)
    MORELESS        reduce using rule 46 (VAR_CTE -> FLOAT .)
    ID              reduce using rule 46 (VAR_CTE -> FLOAT .)
    IF              reduce using rule 46 (VAR_CTE -> FLOAT .)
    PRINT           reduce using rule 46 (VAR_CTE -> FLOAT .)
    }               reduce using rule 46 (VAR_CTE -> FLOAT .)
    )               reduce using rule 46 (VAR_CTE -> FLOAT .)
    CTESTRING       reduce using rule 46 (VAR_CTE -> FLOAT .)
    (               reduce using rule 46 (VAR_CTE -> FLOAT .)
    INT             reduce using rule 46 (VAR_CTE -> FLOAT .)
    FLOAT           reduce using rule 46 (VAR_CTE -> FLOAT .)


state 65

    (32) CONDICION -> IF ( EXPRESION ) . BLOQUE CONDICION_1 ;
    (11) BLOQUE -> . { BLOQUE_1 }

    {               shift and go to state 10

    BLOQUE                         shift and go to state 80

state 66

    (27) ESCRITURA -> PRINT ( ESCRITURA_1 ) . ;

    ;               shift and go to state 81


state 67

    (28) ESCRITURA_1 -> CTESTRING ESCRITURA_2 .

    )               reduce using rule 28 (ESCRITURA_1 -> CTESTRING ESCRITURA_2 .)


state 68

    (30) ESCRITURA_2 -> ESCRITURA_1 .

    )               reduce using rule 30 (ESCRITURA_2 -> ESCRITURA_1 .)


state 69

    (31) ESCRITURA_2 -> empty .
    (43) FACTOR_1 -> empty .

    )               reduce using rule 31 (ESCRITURA_2 -> empty .)
    ID              reduce using rule 43 (FACTOR_1 -> empty .)
    INT             reduce using rule 43 (FACTOR_1 -> empty .)
    FLOAT           reduce using rule 43 (FACTOR_1 -> empty .)


state 70

    (29) ESCRITURA_1 -> EXPRESION ESCRITURA_2 .

    )               reduce using rule 29 (ESCRITURA_1 -> EXPRESION ESCRITURA_2 .)


state 71

    (4) VARS -> VAR ID VARS_I : TIPO ; . VARS_1
    (7) VARS_1 -> . ID VARS_I : TIPO ; VARS_1
    (8) VARS_1 -> . empty
    (47) empty -> .

    ID              shift and go to state 82
    {               reduce using rule 47 (empty -> .)

    VARS_1                         shift and go to state 83
    empty                          shift and go to state 84

state 72

    (23) EXPRESION_1 -> > EXPRESION .

    ID              reduce using rule 23 (EXPRESION_1 -> > EXPRESION .)
    IF              reduce using rule 23 (EXPRESION_1 -> > EXPRESION .)
    PRINT           reduce using rule 23 (EXPRESION_1 -> > EXPRESION .)
    }               reduce using rule 23 (EXPRESION_1 -> > EXPRESION .)
    )               reduce using rule 23 (EXPRESION_1 -> > EXPRESION .)
    CTESTRING       reduce using rule 23 (EXPRESION_1 -> > EXPRESION .)
    (               reduce using rule 23 (EXPRESION_1 -> > EXPRESION .)
    +               reduce using rule 23 (EXPRESION_1 -> > EXPRESION .)
    -               reduce using rule 23 (EXPRESION_1 -> > EXPRESION .)
    INT             reduce using rule 23 (EXPRESION_1 -> > EXPRESION .)
    FLOAT           reduce using rule 23 (EXPRESION_1 -> > EXPRESION .)


state 73

    (24) EXPRESION_1 -> < EXPRESION .

    ID              reduce using rule 24 (EXPRESION_1 -> < EXPRESION .)
    IF              reduce using rule 24 (EXPRESION_1 -> < EXPRESION .)
    PRINT           reduce using rule 24 (EXPRESION_1 -> < EXPRESION .)
    }               reduce using rule 24 (EXPRESION_1 -> < EXPRESION .)
    )               reduce using rule 24 (EXPRESION_1 -> < EXPRESION .)
    CTESTRING       reduce using rule 24 (EXPRESION_1 -> < EXPRESION .)
    (               reduce using rule 24 (EXPRESION_1 -> < EXPRESION .)
    +               reduce using rule 24 (EXPRESION_1 -> < EXPRESION .)
    -               reduce using rule 24 (EXPRESION_1 -> < EXPRESION .)
    INT             reduce using rule 24 (EXPRESION_1 -> < EXPRESION .)
    FLOAT           reduce using rule 24 (EXPRESION_1 -> < EXPRESION .)


state 74

    (25) EXPRESION_1 -> MORELESS EXPRESION .

    ID              reduce using rule 25 (EXPRESION_1 -> MORELESS EXPRESION .)
    IF              reduce using rule 25 (EXPRESION_1 -> MORELESS EXPRESION .)
    PRINT           reduce using rule 25 (EXPRESION_1 -> MORELESS EXPRESION .)
    }               reduce using rule 25 (EXPRESION_1 -> MORELESS EXPRESION .)
    )               reduce using rule 25 (EXPRESION_1 -> MORELESS EXPRESION .)
    CTESTRING       reduce using rule 25 (EXPRESION_1 -> MORELESS EXPRESION .)
    (               reduce using rule 25 (EXPRESION_1 -> MORELESS EXPRESION .)
    +               reduce using rule 25 (EXPRESION_1 -> MORELESS EXPRESION .)
    -               reduce using rule 25 (EXPRESION_1 -> MORELESS EXPRESION .)
    INT             reduce using rule 25 (EXPRESION_1 -> MORELESS EXPRESION .)
    FLOAT           reduce using rule 25 (EXPRESION_1 -> MORELESS EXPRESION .)


state 75

    (20) EXP_1 -> + EXP .

    >               reduce using rule 20 (EXP_1 -> + EXP .)
    <               reduce using rule 20 (EXP_1 -> + EXP .)
    MORELESS        reduce using rule 20 (EXP_1 -> + EXP .)
    ID              reduce using rule 20 (EXP_1 -> + EXP .)
    IF              reduce using rule 20 (EXP_1 -> + EXP .)
    PRINT           reduce using rule 20 (EXP_1 -> + EXP .)
    }               reduce using rule 20 (EXP_1 -> + EXP .)
    )               reduce using rule 20 (EXP_1 -> + EXP .)
    CTESTRING       reduce using rule 20 (EXP_1 -> + EXP .)
    (               reduce using rule 20 (EXP_1 -> + EXP .)
    +               reduce using rule 20 (EXP_1 -> + EXP .)
    -               reduce using rule 20 (EXP_1 -> + EXP .)
    INT             reduce using rule 20 (EXP_1 -> + EXP .)
    FLOAT           reduce using rule 20 (EXP_1 -> + EXP .)


state 76

    (21) EXP_1 -> - EXP .

    >               reduce using rule 21 (EXP_1 -> - EXP .)
    <               reduce using rule 21 (EXP_1 -> - EXP .)
    MORELESS        reduce using rule 21 (EXP_1 -> - EXP .)
    ID              reduce using rule 21 (EXP_1 -> - EXP .)
    IF              reduce using rule 21 (EXP_1 -> - EXP .)
    PRINT           reduce using rule 21 (EXP_1 -> - EXP .)
    }               reduce using rule 21 (EXP_1 -> - EXP .)
    )               reduce using rule 21 (EXP_1 -> - EXP .)
    CTESTRING       reduce using rule 21 (EXP_1 -> - EXP .)
    (               reduce using rule 21 (EXP_1 -> - EXP .)
    +               reduce using rule 21 (EXP_1 -> - EXP .)
    -               reduce using rule 21 (EXP_1 -> - EXP .)
    INT             reduce using rule 21 (EXP_1 -> - EXP .)
    FLOAT           reduce using rule 21 (EXP_1 -> - EXP .)


state 77

    (36) TERMINO_1 -> * TERMINO .

    +               reduce using rule 36 (TERMINO_1 -> * TERMINO .)
    -               reduce using rule 36 (TERMINO_1 -> * TERMINO .)
    >               reduce using rule 36 (TERMINO_1 -> * TERMINO .)
    <               reduce using rule 36 (TERMINO_1 -> * TERMINO .)
    MORELESS        reduce using rule 36 (TERMINO_1 -> * TERMINO .)
    ID              reduce using rule 36 (TERMINO_1 -> * TERMINO .)
    IF              reduce using rule 36 (TERMINO_1 -> * TERMINO .)
    PRINT           reduce using rule 36 (TERMINO_1 -> * TERMINO .)
    }               reduce using rule 36 (TERMINO_1 -> * TERMINO .)
    )               reduce using rule 36 (TERMINO_1 -> * TERMINO .)
    CTESTRING       reduce using rule 36 (TERMINO_1 -> * TERMINO .)
    (               reduce using rule 36 (TERMINO_1 -> * TERMINO .)
    INT             reduce using rule 36 (TERMINO_1 -> * TERMINO .)
    FLOAT           reduce using rule 36 (TERMINO_1 -> * TERMINO .)


state 78

    (37) TERMINO_1 -> / TERMINO .

    +               reduce using rule 37 (TERMINO_1 -> / TERMINO .)
    -               reduce using rule 37 (TERMINO_1 -> / TERMINO .)
    >               reduce using rule 37 (TERMINO_1 -> / TERMINO .)
    <               reduce using rule 37 (TERMINO_1 -> / TERMINO .)
    MORELESS        reduce using rule 37 (TERMINO_1 -> / TERMINO .)
    ID              reduce using rule 37 (TERMINO_1 -> / TERMINO .)
    IF              reduce using rule 37 (TERMINO_1 -> / TERMINO .)
    PRINT           reduce using rule 37 (TERMINO_1 -> / TERMINO .)
    }               reduce using rule 37 (TERMINO_1 -> / TERMINO .)
    )               reduce using rule 37 (TERMINO_1 -> / TERMINO .)
    CTESTRING       reduce using rule 37 (TERMINO_1 -> / TERMINO .)
    (               reduce using rule 37 (TERMINO_1 -> / TERMINO .)
    INT             reduce using rule 37 (TERMINO_1 -> / TERMINO .)
    FLOAT           reduce using rule 37 (TERMINO_1 -> / TERMINO .)


state 79

    (39) FACTOR -> ( EXPRESION ) . FACTOR_1
    (41) FACTOR_1 -> . +
    (42) FACTOR_1 -> . -
    (43) FACTOR_1 -> . empty
    (47) empty -> .

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    +               shift and go to state 37
    -               shift and go to state 38
    *               reduce using rule 47 (empty -> .)
    /               reduce using rule 47 (empty -> .)
    >               reduce using rule 47 (empty -> .)
    <               reduce using rule 47 (empty -> .)
    MORELESS        reduce using rule 47 (empty -> .)
    ID              reduce using rule 47 (empty -> .)
    IF              reduce using rule 47 (empty -> .)
    PRINT           reduce using rule 47 (empty -> .)
    }               reduce using rule 47 (empty -> .)
    )               reduce using rule 47 (empty -> .)
    CTESTRING       reduce using rule 47 (empty -> .)
    (               reduce using rule 47 (empty -> .)
    INT             reduce using rule 47 (empty -> .)
    FLOAT           reduce using rule 47 (empty -> .)

  ! +               [ reduce using rule 47 (empty -> .) ]
  ! -               [ reduce using rule 47 (empty -> .) ]

    FACTOR_1                       shift and go to state 85
    empty                          shift and go to state 39

state 80

    (32) CONDICION -> IF ( EXPRESION ) BLOQUE . CONDICION_1 ;
    (33) CONDICION_1 -> . ELSE BLOQUE
    (34) CONDICION_1 -> . empty
    (47) empty -> .

    ELSE            shift and go to state 87
    ;               reduce using rule 47 (empty -> .)

    CONDICION_1                    shift and go to state 86
    empty                          shift and go to state 88

state 81

    (27) ESCRITURA -> PRINT ( ESCRITURA_1 ) ; .

    ID              reduce using rule 27 (ESCRITURA -> PRINT ( ESCRITURA_1 ) ; .)
    IF              reduce using rule 27 (ESCRITURA -> PRINT ( ESCRITURA_1 ) ; .)
    PRINT           reduce using rule 27 (ESCRITURA -> PRINT ( ESCRITURA_1 ) ; .)
    }               reduce using rule 27 (ESCRITURA -> PRINT ( ESCRITURA_1 ) ; .)


state 82

    (7) VARS_1 -> ID . VARS_I : TIPO ; VARS_1
    (5) VARS_I -> . ID VARS_I
    (6) VARS_I -> . empty
    (47) empty -> .

    ID              shift and go to state 21
    :               reduce using rule 47 (empty -> .)

    VARS_I                         shift and go to state 89
    empty                          shift and go to state 23

state 83

    (4) VARS -> VAR ID VARS_I : TIPO ; VARS_1 .

    {               reduce using rule 4 (VARS -> VAR ID VARS_I : TIPO ; VARS_1 .)


state 84

    (8) VARS_1 -> empty .

    {               reduce using rule 8 (VARS_1 -> empty .)


state 85

    (39) FACTOR -> ( EXPRESION ) FACTOR_1 .

    *               reduce using rule 39 (FACTOR -> ( EXPRESION ) FACTOR_1 .)
    /               reduce using rule 39 (FACTOR -> ( EXPRESION ) FACTOR_1 .)
    +               reduce using rule 39 (FACTOR -> ( EXPRESION ) FACTOR_1 .)
    -               reduce using rule 39 (FACTOR -> ( EXPRESION ) FACTOR_1 .)
    >               reduce using rule 39 (FACTOR -> ( EXPRESION ) FACTOR_1 .)
    <               reduce using rule 39 (FACTOR -> ( EXPRESION ) FACTOR_1 .)
    MORELESS        reduce using rule 39 (FACTOR -> ( EXPRESION ) FACTOR_1 .)
    ID              reduce using rule 39 (FACTOR -> ( EXPRESION ) FACTOR_1 .)
    IF              reduce using rule 39 (FACTOR -> ( EXPRESION ) FACTOR_1 .)
    PRINT           reduce using rule 39 (FACTOR -> ( EXPRESION ) FACTOR_1 .)
    }               reduce using rule 39 (FACTOR -> ( EXPRESION ) FACTOR_1 .)
    )               reduce using rule 39 (FACTOR -> ( EXPRESION ) FACTOR_1 .)
    CTESTRING       reduce using rule 39 (FACTOR -> ( EXPRESION ) FACTOR_1 .)
    (               reduce using rule 39 (FACTOR -> ( EXPRESION ) FACTOR_1 .)
    INT             reduce using rule 39 (FACTOR -> ( EXPRESION ) FACTOR_1 .)
    FLOAT           reduce using rule 39 (FACTOR -> ( EXPRESION ) FACTOR_1 .)


state 86

    (32) CONDICION -> IF ( EXPRESION ) BLOQUE CONDICION_1 . ;

    ;               shift and go to state 90


state 87

    (33) CONDICION_1 -> ELSE . BLOQUE
    (11) BLOQUE -> . { BLOQUE_1 }

    {               shift and go to state 10

    BLOQUE                         shift and go to state 91

state 88

    (34) CONDICION_1 -> empty .

    ;               reduce using rule 34 (CONDICION_1 -> empty .)


state 89

    (7) VARS_1 -> ID VARS_I . : TIPO ; VARS_1

    :               shift and go to state 92


state 90

    (32) CONDICION -> IF ( EXPRESION ) BLOQUE CONDICION_1 ; .

    ID              reduce using rule 32 (CONDICION -> IF ( EXPRESION ) BLOQUE CONDICION_1 ; .)
    IF              reduce using rule 32 (CONDICION -> IF ( EXPRESION ) BLOQUE CONDICION_1 ; .)
    PRINT           reduce using rule 32 (CONDICION -> IF ( EXPRESION ) BLOQUE CONDICION_1 ; .)
    }               reduce using rule 32 (CONDICION -> IF ( EXPRESION ) BLOQUE CONDICION_1 ; .)


state 91

    (33) CONDICION_1 -> ELSE BLOQUE .

    ;               reduce using rule 33 (CONDICION_1 -> ELSE BLOQUE .)


state 92

    (7) VARS_1 -> ID VARS_I : . TIPO ; VARS_1
    (9) TIPO -> . FLOAT
    (10) TIPO -> . INT

    FLOAT           shift and go to state 45
    INT             shift and go to state 46

    TIPO                           shift and go to state 93

state 93

    (7) VARS_1 -> ID VARS_I : TIPO . ; VARS_1

    ;               shift and go to state 94


state 94

    (7) VARS_1 -> ID VARS_I : TIPO ; . VARS_1
    (7) VARS_1 -> . ID VARS_I : TIPO ; VARS_1
    (8) VARS_1 -> . empty
    (47) empty -> .

    ID              shift and go to state 82
    {               reduce using rule 47 (empty -> .)

    VARS_1                         shift and go to state 95
    empty                          shift and go to state 84

state 95

    (7) VARS_1 -> ID VARS_I : TIPO ; VARS_1 .

    {               reduce using rule 7 (VARS_1 -> ID VARS_I : TIPO ; VARS_1 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for + in state 33 resolved as shift
WARNING: shift/reduce conflict for - in state 33 resolved as shift
WARNING: shift/reduce conflict for + in state 79 resolved as shift
WARNING: shift/reduce conflict for - in state 79 resolved as shift
